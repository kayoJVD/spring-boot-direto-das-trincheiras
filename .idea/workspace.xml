<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e81a9097-1e39-4b7c-91eb-fb213c7be312" name="Changes" comment="video40,41,42,43,44:">
      <change afterPath="$PROJECT_DIR$/user-service/src/test/resources/user/post-request-user-blank-fields-400.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user-service/src/test/resources/user/post-request-user-empty-fields-400.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user-service/src/test/resources/user/post-request-user-invalid-email-400.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/main/java/academy/devdojo/controller/UserController.java" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/main/java/academy/devdojo/controller/UserController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/main/java/academy/devdojo/request/UserPostRequest.java" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/main/java/academy/devdojo/request/UserPostRequest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/main/java/academy/devdojo/request/UserPutRequest.java" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/main/java/academy/devdojo/request/UserPutRequest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/test/java/academy/devdojo/controller/UserControllerTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/test/java/academy/devdojo/controller/UserControllerTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/test/resources/user/post-request-user-200.json" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/test/resources/user/post-request-user-200.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="AnnotationType" />
        <option value="Class" />
        <option value="JUnit5 Test Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;kayoJVD&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:kayoJVD/spring-boot-direto-das-trincheiras.git&quot;,
    &quot;accountId&quot;: &quot;45674ccd-2a94-4110-8689-d6cadf7f519f&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2y8nO2fYyRTkI7PyT9SWBuiPvPK" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.AnimeServiceApplication.executor&quot;: &quot;Debug&quot;,
    &quot;Application.UserServiceApplication.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AnimeControllerTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AnimeControllerTest.findAll_ReturnsAllAnimes_WhenArgumentIsNull.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AnimeControllerTest.findById_ReturnsProducersById_WhenSuccesful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AnimeControllerTest.findById_ThrowsResponseStatusException_WhenAnimeIsNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AnimeControllerTest.findById_ThrowsResponseStatusException_WhenProducerIsNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AnimeControllerTest.findByName_ReturnsEmptyList_WhenNameIsNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AnimeControllerTest.findByName_ReturnsFoundAnimeList_WhenNameIsFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AnimeControllerTest.save_CreatesAnime_WhenSuccessful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AnimeHardCodeRepositoryTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AnimeServiceApplicationTests.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AnimeServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProducerControllerTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProducerControllerTest.findAll_ReturnsAllProducers_WhenNameIsNull.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProducerControllerTest.findById_ThrowsResponseStatusException_WhenProducerIsNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProducerHardCodeRepositoryTest.delete_RemoveProducer_WhenSuccessful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProducerHardCodeRepositoryTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProducerHardCodeRepositoryTest.save_CreatesProducer_WhenSuccessful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProducerServiceTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerTest.delete_RemoveUser_WhenSuccessful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerTest.delete_ThrowResponseStatusException_WhenNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerTest.findAll_ReturnsAllUsers_WhenArgumentIsNull.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerTest.findAll_ReturnsEmptyList_WhenNameIsNotFound.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.UserControllerTest.findAll_ReturnsUserInList_WhenNameIsFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerTest.findById_ReturnsUserGivenId_WhenSuccessful.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.UserControllerTest.save_CreatedAUser_WhenSuccessful.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.UserControllerTest.save_CreatedUser_WhenSuccessful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreBlank.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreEmpty (1).executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreEmpty (2).executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreEmpty.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerTest.update_ThrowResponseStatusException_WhenNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerTest.update_UpdateUser_WhenSuccessful.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.UserHardCodeRepositoryTest.delete_DeleteUser_WhenSuccessful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserHardCodeRepositoryTest.delete_RemoveProducer_WhenSuccessful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserHardCodeRepositoryTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserHardCodeRepositoryTest.findAll_ReturnsAllUsers_WhenSuccessful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserHardCodeRepositoryTest.findByName_ReturnUserEmpetyList_WhenNameIsNull.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserHardCodeRepositoryTest.findByName_ReturnUserName_WhenFoundName.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserHardCodeRepositoryTest.save_CreatesUser_WhenSuccessful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserHardCodeRepositoryTest.update_UpdateUser_WhenSuccessful.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.UserServiceApplicationTests.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.delete_RemoveAUser_WhenSuccessful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.delete_ThrowsResponseStatusException_WhenIdNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.delete_ThrowsResponseStatusException_WhenUserNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.findAll_ReturnsAllUsers_WhenArgumentIsNull.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.findAll_ReturnsEmptyList_WhenNameIsNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.findAll_ReturnsUserInList_WhenNameIsFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.findAll_ReturnsUser_WhenNameIsFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.findById_ReturnResponseStatusException_WhenIdNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.findById_ReturnsUserGivenId_WhenSuccessful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.save_CreateAUser_WhenSuccessful.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.update_ThrowsResponseStatusException_WhenUserNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceTest.update_UpdatesUser_WhenSuccessful.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.academy.devdojo in user-service.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.controller in anime-service.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.devdojo in anime-service (1).executor&quot;: &quot;Run&quot;,
    &quot;JUnit.devdojo in anime-service.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.devdojo in user-service.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.java in anime-service.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Kayo Alves/IdeaProjects/spring-boot-direto-das-trincheiras/user-service/src/test/resources/user&quot;,
    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.projectsettings.compiler.annotationProcessors&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="academy.devdojo.user-service.src.test.java.academy.devdojo" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Kayo Alves\IdeaProjects\spring-boot-direto-das-trincheiras\user-service\src\test\resources\user" />
      <recent name="C:\Users\Kayo Alves\IdeaProjects\spring-boot-direto-das-trincheiras\user-service\src\test\resources" />
      <recent name="C:\Users\Kayo Alves\IdeaProjects\spring-boot-direto-das-trincheiras" />
      <recent name="C:\Users\Kayo Alves\IdeaProjects\spring-boot-direto-das-trincheiras\anime-service\src\main\java\academy\devdojo" />
      <recent name="C:\Users\Kayo Alves\IdeaProjects\spring-boot-direto-das-trincheiras\anime-service\src\test\resources" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Kayo Alves\IdeaProjects\spring-boot-direto-das-trincheiras\user-service\src\test\resources\user" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="academy.devdojo.controller" />
      <recent name="academy.devdojo.service" />
      <recent name="academy.devdojo.repository" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="academy.devdojo.request" />
      <recent name="academy.devdojo.response" />
      <recent name="academy.devdojo.controller" />
      <recent name="academy.devdojo.commons" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreEmpty (2)">
    <configuration name="ProducerControllerTest.findAll_ReturnsAllProducers_WhenNameIsNull" type="JUnit" factoryName="JUnit" nameIsGenerated="true">
      <module name="anime-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="academy.devdojo.controller.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="academy.devdojo.controller" />
      <option name="MAIN_CLASS_NAME" value="academy.devdojo.controller.ProducerControllerTest" />
      <option name="METHOD_NAME" value="findAll_ReturnsAllProducers_WhenNameIsNull" />
      <option name="TEST_OBJECT" value="method" />
      <option name="VM_PARAMETERS" value="-Dspring.profiles.active=test" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreBlank" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="user-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="academy.devdojo.controller.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="academy.devdojo.controller" />
      <option name="MAIN_CLASS_NAME" value="academy.devdojo.controller.UserControllerTest" />
      <option name="METHOD_NAME" value="save_ReturnsBadRequest_WhenFieldsAreBlank" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreEmpty (1)" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="user-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="academy.devdojo.controller.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="academy.devdojo.controller" />
      <option name="MAIN_CLASS_NAME" value="academy.devdojo.controller.UserControllerTest" />
      <option name="METHOD_NAME" value="save_ReturnsBadRequest_WhenFieldsAreEmpty(java.lang.String)" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreEmpty (2)" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="user-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="academy.devdojo.controller.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="academy.devdojo.controller" />
      <option name="MAIN_CLASS_NAME" value="academy.devdojo.controller.UserControllerTest" />
      <option name="METHOD_NAME" value="save_ReturnsBadRequest_WhenFieldsAreEmpty(java.lang.String,java.util.List)" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreEmpty" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="user-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="academy.devdojo.controller.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="academy.devdojo.controller" />
      <option name="MAIN_CLASS_NAME" value="academy.devdojo.controller.UserControllerTest" />
      <option name="METHOD_NAME" value="save_ReturnsBadRequest_WhenFieldsAreEmpty" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="devdojo in user-service" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="user-service" />
      <option name="TEST_OBJECT" value="directory" />
      <dir value="$PROJECT_DIR$/user-service/src/test/java/academy/devdojo" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="JUnit.ProducerControllerTest.findAll_ReturnsAllProducers_WhenNameIsNull" />
      <item itemvalue="JUnit.UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreBlank" />
      <item itemvalue="JUnit.UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreEmpty" />
      <item itemvalue="JUnit.UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreEmpty (1)" />
      <item itemvalue="JUnit.UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreEmpty (2)" />
      <item itemvalue="JUnit.devdojo in user-service" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreEmpty (2)" />
        <item itemvalue="JUnit.UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreEmpty (1)" />
        <item itemvalue="JUnit.UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreBlank" />
        <item itemvalue="JUnit.UserControllerTest.save_ReturnsBadRequest_WhenFieldsAreEmpty" />
        <item itemvalue="JUnit.devdojo in user-service" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e81a9097-1e39-4b7c-91eb-fb213c7be312" name="Changes" comment="video40,41,42,43,44:" />
      <created>1749225037021</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1749225037021</updated>
    </task>
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="video40,41,42,43,44:" />
    <option name="LAST_COMMIT_MESSAGE" value="video40,41,42,43,44:" />
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <configuration name="Application">
        <watch expression="((UserService)((UserController)this).service).repository" custom="academy.devdojo.service.UserService,academy.devdojo.controller.UserController" />
      </configuration>
    </watches-manager>
  </component>
</project>